spring.application.name=gateway-service
server.port=8087
#profile used to fetch properties file from config server eg:http://localhost:8084/gateway-service/development
spring.profiles.active=development
#spring config sever url
spring.cloud.config.uri=http://localhost:8084
#Application will fail to start if not able to locate properties file from above config server
spring.cloud.config.fail-fast=true
#following are username and password for connecting to above config server
spring.cloud.config.username=user
spring.cloud.config.password=user1234

#Property to locate discovery server
eureka.client.serverUrl.defaultZone=http://localhost:8761/

#this property will stop this service to register with eureka server, but need to set true in production
eureka.client.register-with-eureka=true
#this property will stop this service to fetch registry for registering itself as we don't want it to register with eureka
eureka.client.fetch-registry=true

#customer client route
#Sample url : http://192.168.1.6:8761/customer-profile-service/home
zuul.routes.customer-profile-service.path=/customer-profile-service/**
zuul.routes.customer-profile-service.url=http://192.168.1.6:8081/customer

#order-detail-service client route
zuul.routes.order-detail-service.path=/order-detail-service/**
zuul.routes.order-detail-service.url=http://192.168.1.6:8082/order
#product-detail-service client route
zuul.routes.product-detail-service.path=/product-detail-service/**
zuul.routes.product-detail-service.url=http://192.168.1.6:8083/product
#caller-service client route
zuul.routes.caller-service.path=/caller-service/**
zuul.routes.caller-service.url=http://192.168.1.6:8085/caller
#receiver-service client route
zuul.routes.receiver-service.path=/receiver-service/**
zuul.routes.receiver-service.url=http://192.168.1.6:8086/receiver